apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-sender
  labels:
    app: micro-sender
spec:
  replicas: 1
  selector:
    matchLabels:
      app: micro-sender
  template:
    metadata:
      labels:
        app: micro-sender
    spec:
      containers:
        - name: micro-sender
          image: ljx213101212/micro-sender:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "docker"
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              value: "prometheus,health,info"
            - name: MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED
              value: "true"
            - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS
              value: "always"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-recipient
  labels:
    app: micro-recipient
spec:
  replicas: 1
  selector:
    matchLabels:
      app: micro-recipient
  template:
    metadata:
      labels:
        app: micro-recipient
    spec:
      containers:
        - name: micro-recipient
          image: ljx213101212/micro-recipient:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "docker"
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              value: "prometheus,health,info"
            - name: MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED
              value: "true"
            - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS
              value: "always"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-collector
  labels:
    app: micro-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: micro-collector
  template:
    metadata:
      labels:
        app: micro-collector
    spec:
      containers:
        - name: micro-collector
          image: ljx213101212/micro-collector:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "docker"
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              value: "prometheus,health,info"
            - name: MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED
              value: "true"
            - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS
              value: "always"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          ports:
            - containerPort: 5672
            - containerPort: 15672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
      volumes:
        - name: prometheus-config-volume
          configMap:
            name: prometheus-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  ports:
    - name: amqp
      port: 5672
    - name: management
      port: 15672
  selector:
    app: rabbitmq
---
apiVersion: v1
kind: Service
metadata:
  name: micro-sender
  labels:
    app: micro-sender
spec:
  ports:
    - port: 8080
  selector:
    app: micro-sender
---
apiVersion: v1
kind: Service
metadata:
  name: micro-recipient
  labels:
    app: micro-recipient
spec:
  ports:
    - port: 8080
  selector:
    app: micro-recipient
---
apiVersion: v1
kind: Service
metadata:
  name: micro-collector
  labels:
    app: micro-collector
spec:
  ports:
    - port: 8080
  selector:
    app: micro-collector
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  ports:
    - port: 9090
  selector:
    app: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  ports:
    - port: 3000
  selector:
    app: grafana
