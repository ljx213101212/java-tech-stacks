spring.application.name=spring-boot-3-2024


# Exclude individual endpoints with a comma-delimited list
# management.endpoints.web.exposure.exclude=health,info
management.endpoints.web.exposure.include=*
management.info.env.enabled=true

info.app.name=Hello World
info.app.description=A project for learning spring boot 3
info.app.version=1.0.0


#
# Define my crazy properties
#
coach.name=Mickey Mouse
team.name=The Mouse Club

#
# Change Spring Boot embedded server port
#
#server.port=7070

#
# Set the context path of the application
#
# All requests should be prefixed with /ljx213101212
#
#server.servlet.context-path=/ljx213101212


#
# Custom Security credential
spring.security.user.name=ljx
spring.security.user.password=123
# disable the credential for now
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# Make all singleton beans to be lazy..
# spring.main.lazy-initialization=true

# Database Configuration
spring.datasource.url = jdbc:sqlite:student_tracker.db
spring.datasource.driver-class-name = org.sqlite.JDBC
spring.jpa.database-platform = org.hibernate.community.dialect.SQLiteDialect

# Configure JPA/Hibernate to auto create the tables
# the "update" config will keep existing data in the table
spring.jpa.hibernate.ddl-auto=update

# Turn off the Spring Boot banner
spring.main.banner-mode=off

# Reduce logging level. Set logging level to warn
# logging.level.root=warn

# Add logging configs to display SQL statements
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql.basicBinder=trace

# Add kafka config
spring.kafka.bootstrap-servers=localhost:9092,localhost:9093
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.isolation-level=read_committed

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.enable-idempotence=true
# enable transactional (please enable it for apache_kafka)
spring.kafka.producer.transaction-id-prefix=tx-

logging.level.org.springframework=WARN
logging.level.org.apache.kafka=WARN

# kafka_stream.task1
task1.kafka.stream.input-topic=my-input-topic
task1.kafka.stream.output-topic=my-output-topic
task1.kafka.stream.application-id=test-stream
task1.kafka.stream.bootstrap-server=localhost:9092,localhost:9093

# kafka_stream.taks2
task2.kafka.stream.application-id=test-stream
task2.kafka.stream.bootstrap-server=localhost:9092,localhost:9093
task2.kafka.stream.source-topic=task2
task2.kafka.stream.output-topic=task2-output

# kafka_stream.task3
task3.kafka.stream.application-id=stream-join-application
task3.kafka.stream.bootstrap-server=localhost:9092,localhost:9093
task3.kafka.stream.source-topic-1=task3-1
task3.kafka.stream.source-topic-2=task3-2

# kafka_stream.task4
task4.kafka.stream.application-id=serde-appplication
task4.kafka.stream.customer-group=task4-customer-group
task4.kafka.stream.bootstrap-server=localhost:9092,localhost:9093
task4.kafka.stream.client-id=task4-client-id
task4.kafka.stream.source-topic=task4-2
task4.kafka.stream.output-topic=task4-output
# suppress the json deserializer exception
spring.kafka.streams.properties.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler

# kafka_stream.task5
